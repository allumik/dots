# bspwm hotkeys
#
# Cleanly quit bspwm
super + shift + m
	bspc quit 1 && pkill lemonpanel && pkill lemonbar

# Show keybindings
super + F1
	$TERMINAL -e keybindings.sh
#
# Window manipulation
# ______________

# Close window
super + shift + q
	bspc  node -c

# Kill window
super + q
	bspc  node -k

# Toggle tiling mode of window
super + shift + t
	bspc node -t {pseudo_tiled, tiled}
super + t
	{bspc node -t floating && window-placer $(bspc query -T -d | grep -o '"state":"floating"' | wc -l),bspc node -t tiled}
# Force all windows of the desktop to tile
# Force all windows of the desktop to float and arrange them
super + ctrl + t
	bspcp {tile, float}

# Toggle fullscreen
super + shift + f 
	bspc node -t {fullscreen,tiled}	

## Try to keep size and position of the selected window
#super + o
	#bspc node -g private
#
## Make window sticky
#super + i
	#bspc node -g sticky

## Lock a window from closing
#super + Escape
	#bspc node -g locked

### Map or unmap windows (functional equivalent of "minimize")
super + c
    whid dmenu

super + shift + c
    whid hide

super + ctrl + c
    whid last

#
# Window moving and splitting
# ______________    

# Autopresel (split window in its largest dimension)
ctrl + space
	auto-presel
	
# Presel window for splitting in certain direction
#alt + ctrl + {a,s,w,d}
#	bspc node -p \~{west,south,north,east} -i

#alt + ctrl + {h,j,k,l}
	#bspc node -p \~{west,south,north,east}
#
#alt + ctrl + {Left,Down,Up,Right}
	#bspc node -p \~{west,south,north,east}

# Presel the desktop for splitting in certain direction
# alt + shift + {a,s,w,d}
	# bspc node @/ -p \~{west,south,north,east}
# 
alt + shift + {h,j,k,l}
	bspc node @/ -p \~{west,south,north,east}

alt + shift + {Left,Down,Up,Right}
	bspc node @/ -p \~{west,south,north,east}

# Set splitting ratio of windows
alt + ctrl + {1-9}
	bspc node -o 0.{1-9}

# Move current window to largest space or preselected area if there is one.
super + shift + Return
    windowpromoter

# Create a new "master area", splitting the whole desktop instead of just windows.
alt + Return
	bspc node -n @/

# go (Shift=move) to desktop (and focus the monitor that the desktop is located on. Bspwm style)
super + {_,shift + }{1-9, 0}
    bspc {desktop -f,node -d} ^{1-9, 0}

## Alternative: i3 style behavior (focus nth, desktop of the focused monitor)
#super + {1-9,0}
	#focusdesktopofthismonitor {1-9,0}
#super + shift + {1-9,0}
	#movetodesktopofthismonitor {1-9,0}

## Another alternative: xmonad style desktops. You have 10 desktops shared between all monitors,
## and focusing a desktop focuses it on the currently focused monitor
#super + {1-9,0}
	#summondesktop.sh {1-9,10}
#super + shift + {1-9,0}
	#bspc node -d ^{1-9,10}

# Select previous / next desktop
super + {n,m}
	bspc desktop -f {prev.occupied,next.occupied} 

# cycle windows
alt + {_,shift + }Tab
    bspc node -f {next,prev}

# Go to specific window
super + w
	WindowSelector

#Focus windows by direction, works with multihead
#super +  {a,s,w,d}
    #focusmover {west,south,north,east}

super +  {h,j,k,l}
    focusmover {west,south,north,east}

super +  {Left,Down,Up,Right}
    focusmover {west,south,north,east}

# Move tiled windows. Moving a tiled window to 
# preselected one moves into preselection instead. 
# Moving out of the screen should move the window to next monitor if possible
#super + shift + {a,s,w,d}
	#windowgrabber {west,south,north,east}

super + shift + {h,j,k,l}
	windowgrabber {west,south,north,east}
	
# Different style of movement: transplant into window in chosen direction
super + shift + {Left,Down,Up,Right}
      euclid_mover {west,south,north,east}

#resize windows
#super + ctrl + {a,s,w,d}
#	bspwm_resize.sh {west,south,north,east}

super + ctrl + {h,j,k,l}
	bspwm_resize.sh {west,south,north,east}
	
super + ctrl + {Left,Down,Up,Right}
	bspwm_resize.sh {west,south,north,east}

#
# Layout manipulation/desktop level controls
# __________________________________________

# Toggle monocle mode
super + f 
	bspc desktop -l next
	
# Balance tree
super + shift + b
	bspc node @/ -B

# Balance brother node. If you do this on biggest window of the desktop, it usually means balancing all windows with except the biggest.
super + alt + b
	bspc node @brother -B
	
# Undo balancing (equalize windows)
super + ctrl + b
	bspc node @/ -E

# Toggle automatic balancing of windows
alt + b
	euclid_balancer

# Mirror and flip leaves of tree
super + space
	bspc node @/ -R 90

super + shift + space
	bspc node @/ -R 270

# Rotate leaves of tree
super + shift + {comma,period}
	bspc node @/ -F {horizontal,vertical}

# change window gap at run time
# _____________________________

super + minus
    bspc config -d focused window_gap $((`bspc config -d focused window_gap` + 5 ))

# Restore original gap
super + equal
    bspc config top_padding 6; bspc config -d focused window_gap 15

super + plus
    bspc config -d focused window_gap $((`bspc config -d focused window_gap` - 5 ))

# Remove gap
super + shift + 0
      bspc config -d focused window_gap 0

#
# mouse bindings
# ______________

~button1
	DidIClickDesktop.sh && gapgrab

~button2
	DidIClickDesktop.sh && mygtkmenui -- .config/GTKmenu/BspwmDesktopMenui
#DidIClickDesktop.sh && mygtkmenui -- .config/GTKmenu/BspwmWindowMenui
		
~button3
	DidIClickDesktop.sh && mygtkmenui -- .config/GTKmenu/LaunchMenu

# Switch workspace by scrolling on the desktop. Causes scrolling issues on some systems.
#~button4
#	DidIClickDesktop.sh && bspc desktop -f next
#~button5
#	DidIClickDesktop.sh && bspc desktop -f prev
	
### Add or remove desktops by scrolling
super + ctrl + button5
    bspcp dsktp rm

super + ctrl + button4
    bspcp dsktp add

# Spawn applications popup menu and manually tile selected 
# app where your mouse was when you opened the menu. Smartsplit only chooses
# biggest dimension of the window, MouseLaunch only cares which edge is closer.
# mod5 is alt_gr (first key right from space) on most keyboards. 
mod5 + @button1
    MouseLaunch ; mygtkmenui -- .config/GTKmenu/LaunchMenu
#	smartsplit ; dboxmenu

# Spawn window manipulation menu
# Mod1 is alt
#    BspwmWindowMenu
mod1 + @button1
    mygtkmenui -- .config/GTKmenu/BspwmWindowMenui

# Switch monitors
# _______________

ctrl + super + 1
	~/.screenlayout/singlews.sh

ctrl + super + 2
	~/.screenlayout/dualws.sh

ctrl + super + 3
	~/.screenlayout/dualwsdock.sh

# Touchpad "gestures" (depend on your touchpad driver, very likely to be unavailable)
# _____________________
    
#
# spawn programs
#

# Triggered by just tapping super 
super + shift + d
	rofi -show

#super + p
#	dmenu_recent -h $PANEL_HEIGHT -fn 'xos4 Terminus:size=15' -i

super + Return
	default-terminal
super + z
	default-terminal

super + shift + z
	open-terminal-here
	
super + b
	$BROWSER

super + e
	emacs

# Use slightly bigger font for ranger
super + shift + e
	thunar

super + shift + x
	xflock4

Print
	xfce4-screenshooter
#
# Media keys
#

XF86AudioRaiseVolume
	volume up

XF86AudioLowerVolume
	volume down

XF86AudioMute
	volume mute
	
XF86MonBrightnessDown
 light -U 5 

XF86MonBrightnessUp
 light -A 5

XF86Explorer
    thinkpad-touchpad # the SIX SQUARES BUTTON

Print
    xfce4-screenshooter

XF86Search
	rofi -show

XF86Display
	systemctl sleep

super + XF86Display
	systemctl hibernate

ctrl + alt + Escape
	poweroff

# make sxhkd reload its configuration files:
super + shift + Escape
	pkill -USR1 -x sxhkd

# In case bspwmrc fails to execute/you wish have plugged in a new monitor
super + shift + r
	bspwmrc
#edit this file
alt + ctrl + space
	$GUI_EDITOR ~/.config/sxhkd/sxhkdrc
# Toggle compositing
super + ctrl + space
	{pkill compton ,\
	compton -b }

# Remove receptacles
super + BackSpace
  for i in $(bspc query -N -n .leaf.!window.local); do bspc node $i -k; done
